-- title:  mario bros demo
-- author: lemon
-- desc:   woa its mario bro!!
-- script: lua

--warning: this code is a mess!
--here are some pointers:
-- `m`: mario (player) table (CTRL-F MARIO)
-- `c`: camera table (CTRL-F CAMERA)
-- `objs`: objects that are currently loaded (CTRL-F OBJECT)
-- `obj_table`: table with propierties of objects (CTRL-F GANG)
--   objects are loaded when a level is loaded by checking all tiles and indexing them in the obj_table
--   each entry in the object table has an id (tile number that will trigger the object spawning), name, update and draw functions
--  most of the code for the object handling is copy-pasted from my previous game (titlescreen)
--good luck!

W,H = 30*8,17*8

log = "";function logs(x) log = x end

flr = math.floor
abs = math.abs
function sgn(n)
	return n>0 and 1 or n<1 and -1 or 0
end
function lerp(v0, v1, t)
  return (1 - t) * v0 + t * v1
end

--level data
lvldat = {
	--i had to split 1-1 into two parts so it would fit in the map
	--there's probably a better approach
	{bg=8,x1=0,y1=0,x2=31*8,y2=17}, --1-1a
	{bg=8,x1=0,y1=17,x2=31*8,y2=2*17}  --1-1b
}
lvl = 1 --current level
function loadlevel(n)
	lvl = n
	dat = lvldat[n]
	objs = {}
	map_findspawnobjs(dat.x1,dat.y1,dat.x2,dat.y2)
	m.x = dat.x1*8
	m.y = dat.y1*8+H-32
	m.vx = 0.01
	m.onground = true
	c.update()
end

--CAMERA
c = {x=0,y=0,xbound=80}
function c.spr(i,x,y,...)
	spr(i,x-16*c.x//16,y-c.y,...)
end
function c.map()
	--local tx,ty = c.x/8,c.y/8
	map(0,0,31*8,18*8,-c.x,-c.y,0)
end
function c.update()
	if m.x-c.x > c.xbound then
		--c.x = lerp(c.x,m.x-c.xbound,0.1)
		c.x = m.x-c.xbound
	elseif m.x < c.x then
		--m.x = c.x
		m.vx = m.vx*0.9
		c.x = m.x
	end
	--c.y = H*((m.y-8)//H)
	--c.y = c.y < 0 and 0 or c.y
	c.y = 8*lvldat[lvl].y1
	if c.x > W*7 then
		c.x = W*7
	end
end

function solids(t)
	return t and t >= 128
end
function is_solid(x,y)
	return solids(mget(x//8,y//8))
end
function can_move8x8(x,y)
	if x < 0 or is_solid(x,y)
	or is_solid(x+7,y) 
	or is_solid(x,y+7) 
	or is_solid(x+7,y+7) then
	  return false
	end
	return true
end
function can_move(x,y)
	if y < lvldat[lvl].y1*8 then return true end
	return can_move8x8(x,y)
	and can_move8x8(x+7,y)
	and can_move8x8(x,y+7)
	and can_move8x8(x+7,y+7)
end

G = 0.2 --gravity

--OBJECT list
objs = {}
function obj_spawn(o,x,y)
	if not o then return false end
	local t = {
		update = o.update,
		draw = o.draw,
		name = o.name,
		id = o.id,
		x=x,y=y
	}
	table.insert(objs,t)
	return t
end
function obj_update()	--updates all objs
	local tokill = {}
	for n,o in ipairs(objs) do
		if o.kill then table.insert(tokill,n)
		elseif o.update and (o.x-c.x+17 > 0 and o.x-c.x < W) then
			o:update()
		end
	end
	for _,n in ipairs(tokill) do
		if objs[n] then
			table.remove(objs,n)
		end
	end
end
function obj_draw()	--draws all objs
	for _,o in ipairs(objs) do
		if o.draw and (o.x-c.x+17 > 0 and o.x-c.x < W) then
			o:draw()
		end
	end
end
--OBJECT attribute table
obj_table = {}
function obj_spawnid(id,x,y)
	--looks up id in obj_table and spawns object
	return obj_spawn(obj_table[id],x,y)
end
function aabb(x1,y1,w1,h1,x2,y2,w2,h2)
	if x1 and y1 and w1 and h1 and x2 and y2 and w2 and h2 then
		return x1 < x2+w2 and
		 x2 < x1+w1 and
		 y1 < y2+h2 and
		 y2 < y1+h1
		end
end
do
	--TABLE--
	local function o(mapid,name,updt,drw,rplc)
		obj_table[mapid] = {
			id = mapid,
			name = name,
			update = updt,
			draw = drw,
			--flag to tell if spawner tile
			--should be removed or let be
			replace = rplc == nil and true or rplc
		}
	end
	local function o_mcollision(o,w,h) --collisioin with mario
		w,h = w or 16, h or 16
		local h = aabb(o.x,o.y,w,h,m.x+2,m.y+2-(m.big and 16 or 0),12,12*(m.big and 2 or 1))
		return {
			hit = h,
			stomp = h and m.y < o.y and m.vy > 0
		}
	end
	local function o_enemyproto(self,hp,w,h,ondeath)
		if not self.hp then
			self.hp = hp
			self.max_hp = hp
		else
			if self.hp <= 0 then
				if ondeath then
					ondeath()
				else
					self.kill = true
				end
			end
		end
	end
	local function o_persistrplc(o,id)
		--permanent replace
		mset(o.x//8,o.y//8,id or 0)
	end
	local function o_tmprplc(o,id)
		--temporary replace
		table.insert(overwritten,{x=o.x//8,y=o.y//8,t=mget(o.x//8,o.y//8)})
		mset(o.x//8,o.y//8,id or 0)
	end
	local function o_tmprplc2(o,id)
		--temporary replace 2x2 tiles
		o_tmprplc(o,id)
		o.x=o.x+8
		o_tmprplc(o,id+1)
		o.y=o.y+8
		o_tmprplc(o,id+17)
		o.x=o.x-8
		o_tmprplc(o,id+16)
		o.y=o.y-8
	end
	local oG = G*0.9
	local function o_gravity(o)
		o.vy = o.vy + oG
		if not o.onground then
			o.vy = o.vy+oG
			if o.vy > o.maxvy then
				o.vy = o.maxvy
			end
			if o.vy < 0 and not btn(5) then
				o.vy = o.vy*0.9
			end
		end
	end
	local function o_collision(o)
		local newx,newy = o.x+o.vx,o.y+o.vy
		if can_move(newx,newy) then
			if o.vy > 0 and o.onground then
				--fall
				o.onground = false
			end
			o.x,o.y = newx,newy
		elseif can_move(o.x,newy) then
			o.y = newy
			o.vx = 0
		elseif can_move(newx,o.y) then
			if o.vy > 0 then
				--hit ground
				o.onground = true
			end
			o.vy = 0
			o.x = newx
		end
	end
	local function o_spr(o)
		c.spr(o.id,o.x,o.y,0,1,0,0,2,2)
	end
	
	--THE GANG
	
	o(2,"GOOMBER",
		function(self)
			if self.deathtimer then
				self.deathtimer = self.deathtimer-1
				if self.deathtimer <= 0 then
					m.getcoin()
					self.kill = true
				end
			else
				self.vx = self.vx or -0.7
				self.vy = self.vy or 0
				self.maxvy = 2
				o_gravity(self)
				local oldx = self.x
				o_collision(self)
				if self.x == oldx then
					--hit wall
					self.vx = -self.vx
				end
				local c = o_mcollision(self)
				if c.hit and not c.stomp then
					m.damage()
				elseif c.stomp then
					m.vy = -5
					sfx(1,nil,-1,1,6)
					self.deathtimer = 20
				end
			end
		end,
		function(self)
			if not self.deathtimer then
				c.spr(2,self.x,self.y,0,1,(t/16)%2,0,2,2)
			else --stomped
				c.spr(4,self.x,self.y,0,1,0,0,2,2)
			end
		end
	)
	o(6, "COIN",
		function(self)
			if o_mcollision(self).hit then
				m.getcoin()
				self.kill = true
			end
		end,
		o_spr
	)
	local function qmark_update(self,effect)
		--if self.pkill then return end
		if not self.init then
			o_tmprplc({x=self.x+8,y=self.y},130)
			self.init = true
		end
		if self.timer then
			if self.timer > -3 then
				self.y = self.y-2*sgn(self.timer)
				self.timer = self.timer-1
			else
				self.kill = true
				o_tmprplc2(self,130)
				_ = effect and effect()
			end
		else
			if o_mcollision(self,16,22).hit and m.vy < 0 then
				m.vy = 0
				self.timer = 3
			end
		end
	end
	local function qmark_draw(self,h)
		if not self.timer then
			o_spr({id=8,x=self.x,y=self.y})
		else
			c.spr(130,self.x,self.y,0,1,0,0,2,2)
			_=h and h()
		end
	end
	o(8, "QMARK COIN",
		function(self)
			qmark_update(self, function()
				m.getcoin()
			end)
		end,
		function(self)
			qmark_draw(self,function()
				c.spr(6,self.x,self.y-18,0,1,0,0,2,2)
			end)
		end,false
	)
	o(9, "QMARK MUSHROOM",
		function(self)
			qmark_update(self, function()
				local s = obj_spawnid(10,self.x,self.y-16)
				s.vx = 0.7*sgn(m.vx)
				s.vx = s.vx == 0 and 0.7 or s.vx
				s.vy = -3
			end)
		end,
		qmark_draw,false
	)	
	o(10,"MUSHROOM",
		function(self)
			self.vx = self.vx or -0.7
			self.vy = self.vy or 0
			self.maxvy = 2
			o_gravity(self)
			local oldx = self.x
			o_collision(self)
			if self.x == oldx then
				--hit wall
				self.vx = -self.vx
			end
			if o_mcollision(self).hit then
				self.kill = true
				m.big = true
			end
		end, o_spr
	)
	o(1, "WARP",
		function(self)
			if o_mcollision(self,16,32).hit then
				--[[m.x = 16
				m.y = H+16
				c.update()--]]
				loadlevel(lvl+1)
			end
		end,
		function()end,false
	)
end
--finds objects in map and spawns them
--also loads back objs that were
--previously overwritten when loading
overwritten = {}
function map_findspawnobjs(sx,sy,ex,ey)
	for _,t in ipairs(overwritten) do
		mset(t.x,t.y,t.t)
	end
	overwritten = {}
	sx = sx or 0
	sy = sy or 0
	ex = ex or 31
	ey = ey or 17
	for tx=sx,ex do for ty=sy,ey do
		local t = mget(tx,ty)
		if obj_table[t] then
			if obj_table[t].replace then
				table.insert(overwritten,{
					x=tx,y=ty,t=t
				})
				mset(tx,ty,0)
			end
			obj_spawnid(t,tx*8,ty*8)
		end
	end end
end

--MARIO table
m = {}
function m.init()
	m.x,m.y,m.vx,m.vy=0,0,0,0
	m.coins = 0
	m.dir = 0
	m.accel = 0.1
	m.maxvx = 1.7
	m.maxvx2 = 2.3
	m.maxvy = 10
	m.jumpvy = -6
	m.big = false
	m.duck = false
	m.invframes = 0
	m.onground = false
end

function m.groundbelow()
	return not can_move(m.x,m.y+4)
end
function m.can_move(x,y)
	if m.big and not m.duck then
		return can_move(x,y) and can_move(x,y-16)
	end
	return can_move(x,y)
end

function m.update()
	if m.deathtimer then
		if m.deathtimer == 40 then
			m.vy = -10
		elseif m.y-c.y > H then
			m.deathtimer = nil
--			m.x = 0
--			m.y = 0
			loadlevel(lvl)
			m.coins = 0
			return
		end
		if m.deathtimer <= 40 then
			m.vy = m.vy+G
			m.vy = m.vy < 0 and m.vy*0.9 or m.vy
		end
		m.y = m.y+m.vy
		m.deathtimer = m.deathtimer - 1
		return
	end
	if m.onground then
		m.duck = m.big and btn(1)
	end
	if not m.duck or not m.onground then
		if btn(2) then m.vx=m.vx-m.accel end
	 if btn(3) then m.vx=m.vx+m.accel end
		if (not btn(3) and not btn(2)) or (btn(3) and btn(2)) then
			m.vx = m.vx*(m.onground and 0.8 or 0.999)
		end
	else
		m.vx = m.vx*0.95
	end
	local max = btn(4) and m.maxvx2 or m.maxvx
	if abs(m.vx) > max then
		m.vx = max*sgn(m.vx)
	end
	
	--margin of error for jump
	if btn(5) then
		m.jmpbutt = m.jmpbutt-1
	else
		m.jmpbutt = 5
	end
	--[[if btnp(2) then
		m.dir = 1
	elseif btnp(3) then
		m.dir = 0
	end--]]
	if not m.onground then
		m.vy = m.vy+G
		if m.vy>m.maxvy then
			m.vy = m.maxvy
		end
		if m.vy<0 and not btn(5) then
			m.vy = m.vy*0.9
		end
	else
		m.dir = (-sgn(m.vx)+1)/2
		if btn(5) and m.jmpbutt>0 then
			sfx(0,nil,-1,nil,6)
			--jump
			m.vy = m.jumpvy
			m.x=m.x//4*4+1
			m.onground = false
			m.dir = btn(2) and 1 or (btn(3) and 0) or m.dir
		end
		m.y = flr(m.y)
		if not m.groundbelow() then
			m.onground = false
		end
	end
	
	local newx = m.x+m.vx
	local newy = m.y+m.vy
	
	if m.can_move(newx,newy) then
		if m.vy > 0 and m.onground then
			--fall
			m.onground = false
		end
		m.x,m.y = newx,newy
	elseif m.can_move(m.x,newy) then
		m.y = newy
		m.vx = 0
	elseif m.can_move(newx,m.y) then
		if m.vy > 0 then
			--hit ground
			m.onground = true
			m.y = flr((m.y+4)/8)*8
		end
		m.vy = 0
		m.x = newx
	elseif not m.can_move(m.x,m.y) then
		--mario is stuck
		m.x = m.x+1
	end
	
	if m.y > c.y+H then
		--die
		m.big = false
		m.y = c.y+H
		m.damage()
	end
	if m.x > W*8-16 then
		m.x = W*8-16
	end
	
	if m.invframes > 0 then
		m.invframes = m.invframes - 1
	end
end
function m.draw()
	if m.deathtimer then
		c.spr(268,m.x,m.y,0,1,0,0,2,2)
		return
	end
	if m.invframes%2 == 1 then return end
	local ofst = m.big and 1 or 0

	if m.duck then
		c.spr(300,m.x,m.y-16,0,1,m.dir,0,2,4)
	elseif not m.onground then
		--jmup
		c.spr(266+ofst*32,m.x,m.y-ofst*16,0,1,m.dir,0,2,2+ofst*2)
	elseif abs(m.vx) < 0.05 then
		--idle
		c.spr(256+ofst*32,m.x,m.y-ofst*16,0,1,m.dir,0,2,2+ofst*2)
	elseif (btn(2) and m.vx>0)
	or (btn(3) and m.vx<0) then
		--skid
		c.spr(264+ofst*32,m.x,m.y-ofst*16,0,1,m.dir,0,2,2+ofst*2)
	else
		--walk
		c.spr(258+ofst*32+2*flr((t/6)%3),m.x,m.y-ofst*16,0,1,m.dir,0,2,2+ofst*2)
	end
end
function m.damage()
	if m.deathtimer or m.invframes > 0 then return end
	if m.big then
		m.invframes = 50
		m.big = false
	else
		sfx(3,nil,-1,nil,6)
		m.deathtimer = 70
		m.onground = false
		m.vx,m.vy = 0,0
	end
end
function m.getcoin()
	m.coins = m.coins+1
	sfx(2,nil,-1,2,4)
end

function TIC()
	if not ninit then
		t = 0
		m.init()
		loadlevel(1)
		ninit = true
		music(0,-1,-1,false)
	end
--[[
	if btn(0) then y=y-1 end
	if btn(1) then y=y+1 end
	if btn(2) then x=x-1 end
	if btn(3) then x=x+1 end
--]]

	--UPDATE
	obj_update()
	m.update()
	c.update()

	--DRAW
	local dat = lvldat[lvl] or {}
	cls(dat.bg or 0)
	c.map()
	obj_draw()
	spr(496,0,0,0)
	print(("x%.2i"):format(m.coins),10,2)
	m.draw()
	--GUI
	print(log)
		
	t=t+1
end

-- <TILES>
-- 001:1111111111111111111111111111111111111111111111111111111111111111
-- 002:00000099000009990000999900099999009119990999c1990999c1119999c1c9
-- 003:9900000099900000999900009999900099911900991c9990111c99909c1c9999
-- 004:0000000000000000000000000000000000000000000000000000000000000099
-- 005:0000000000000000000000000000000000000000000000000000000099000000
-- 006:000000000000000000000eee0000eeee0000ee99000ee9ee000ee9ee000ee9ee
-- 007:0000000000000000e1100000ee110000ee1100001ee110001ee110001ee11000
-- 008:099999999eeeeeee9e1eeeee9eeee9999eee99119eee991e9eee991e9eeee11e
-- 009:99999990eeeeeee1eeeee1e199eeeee1199eeee1e991eee1e991eee19991eee1
-- 010:0000009900000999000099990009999900999999099666990966666999666669
-- 011:9900000096600000666600006666600096669900999999909999999099996699
-- 017:1111111111111111111111111111111111111111111111111111111111111111
-- 018:9999ccc99999999909999ccc0000cccc0000cccc00011ccc000111cc00001110
-- 019:9ccc999999999999ccc99990cccc0000cccc1100cc111110c111111001111100
-- 020:000999990991119999cccc119999999999999999000ccccc0000cccc01111100
-- 021:999990009911199011cccc999999999999999999ccccc000cccc000000111110
-- 022:000ee9ee000ee9ee000ee9ee000ee9ee000ee9ee0000ee110000eeee00000eee
-- 023:1ee110001ee110001ee110001ee110001ee11000ee110000ee110000e1100000
-- 024:9eeeeee99eeeeee99eeeeeee9eeeeee99eeeeee99e1eeeee9eeeeeee11111111
-- 025:9111eee191eeeee111eeeee19eeeeee191eeeee111eee1e1eeeeeee111111111
-- 026:99666669999666999999999909666fff0000ffff0000ffff0000ffff00000fff
-- 027:999966699999966999999999fff66690ffff0000ffff0000ffff0000fff00000
-- 028:00000000000000000000000000000000000000000000011100111bbb11bbbbbb
-- 029:000000000000000000000000000000000000000011100000bbb11100bbbbbb11
-- 034:00000011000001bb00011bbb001bbbbb001bbbbb001bbbbb01bbb55b1bbb5bbb
-- 035:11000000bb100000bbb10000bbb10100bbbb1b10b5bbbbb1bb5bbbb1bbbbbbb1
-- 039:00000011000001ff00011fff001fffff001fffff001fffff01fffddf1fffdfff
-- 040:11000000ff100000fff10000fff10100ffff1f10fdfffff1ffdffff1fffffff1
-- 043:000000010000001b000001bb00001bbb0001bbbb001bbbbb01bbbbbb1bbbbbbb
-- 044:bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
-- 045:bbbbb1bbbbbb111bbbbb111bb11b111bb11bb1bbb11bbbbbb11bbbbbbbbbbbbb
-- 046:10000000b1000000bb100000bbb10000bbbb1000bbbbb100bbbbbb10bbbbbbb1
-- 049:0000011100001bbb0001bbbb000bbbbb011bbbbb1bbbbbbb1bbbbbbb01bbbbbb
-- 050:bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
-- 051:bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
-- 052:10010000101b1000b1bb1000bbbb1010bbbbb1b1bbbbbbb1bbbbbbb1bbbbbb10
-- 054:0000011100001fff0001ffff000fffff011fffff1fffffff1fffffff01ffffff
-- 055:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
-- 056:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
-- 057:10010000101f1000f1ff1000ffff1010fffff1f1fffffff1fffffff1ffffff10
-- 065:0000011100001b550001b5550001b55500015555000155550000155500000111
-- 066:1000000051000000551000005510000055100000551000005100000010000000
-- 070:001ffdff0001ffdf00001ffd00001fff00000111000000000000000000000000
-- 071:fffffffffdffffffdddfffddffddddddffffddff1ffffff1011fff1000011100
-- 072:fdffffffdfffffffddffffdffdddddffffdddfffffffffff11ffff1100111100
-- 073:fffff100ffffff10fffffff1fffffff0fffff1101ff110000110000000000000
-- 080:00000000ffffffffffffffff0ffffffb00fffffb000ffffb0000fffb00000ffb
-- 081:000000bbfffffffbbbbbbffbbfbfbbfbffbffbfbfbbbfbfbbbfbbbfbbbbbbbfb
-- 096:000000ff0000000f000000000000000000000000000000000000000000000000
-- 097:fbbbfffbfffffffbfffffffb0ffffffb00fffffb000ffffb0000fffb00000ffb
-- 113:000000bb000000bb000000bb000000bb000000bb000000bb000000bb000000bb
-- 128:9cccccccc9999999c9999999c9999999c9999999c9999999c9999999c9999999
-- 129:c19cccc991c9999191c9999191c9999191c199919191111991ccccc191c99991
-- 130:0111111119999999191999991999999919999999199999991999999919999999
-- 131:1111111099999991999991919999999199999991999999919999999199999991
-- 132:cccccccc99999991999999911111111199919999999199999991999911111111
-- 133:cccccccc99999991999999911111111199919999999199999991999911111111
-- 134:111111111bbbbbbb155555bb1bbb55bb1bbb55bb1bbb55bb1bbb55bb1bbb55bb
-- 135:11111111bbbbbbbbbbbb5555bbbb5bb5bbbb5bb5bbbb5bb5bbbb5bb5bbbb5bb5
-- 136:11111111bbbbbbbb555555555555555555555555555555555555555555555555
-- 137:11111111bbbbbbb155555551b5b5bbb15b5bbbb1b5b5bbb15b5bbbb1b5b5bbb1
-- 138:9cccccccc9cccccccc9cccccccc9cccccccc9999cccc9999cccc9999cccc9999
-- 139:ccccccc1cccccc11ccccc111cccc111199991111999911119999111199991111
-- 144:c9999999c999999911999999cc119999c9cc1111c999ccc1c999999191111119
-- 145:91c9999191c999911c9999911c999991c9999991c9999991c9999911c1111119
-- 146:1999999919999999199999991999999919999999191999991999999901111111
-- 147:9999999199999991999999919999999199999991999991919999999111111110
-- 148:9999991999999919999999191111111199919999999199999991999911111111
-- 149:9999999199999991999999911111111199199999991999999919999911111111
-- 150:1bbb55bb1bbb55bb1bbb55bb1bbb55bb1bbb55bb1bbb55bb1111111100111111
-- 151:bbbb5bb5bbbb5bb5bbbb5bb5bbbb5bb5bbbb5bb5bbbb5bb51111111111111111
-- 152:5555555555555555555555555555555555555555555555551111111111111111
-- 153:5b5bbbb1b5b5bbb15b5bbbb1b5b5bbb15b5bbbb1b5b5bbb11111111111111100
-- 154:cccc9999cccc9999cccc9999cccc9999ccc11111cc111111c111111111111111
-- 155:9999111199991111999911119999111111119111111119111111119111111119
-- 166:001bbb55001bbb55001bbb55001bbb55001bbb55001bbb55001bbb55001bbb55
-- 167:bbbbb5bbbbbbb5bbbbbbb5bbbbbbb5bbbbbbb5bbbbbbb5bbbbbbb5bbbbbbb5bb
-- 168:555555555555555b555555555555555b555555555555555b555555555555555b
-- 169:b5bbb1005bbbb100b5bbb1005bbbb100b5bbb1005bbbb100b5bbb1005bbbb100
-- </TILES>

-- <SPRITES>
-- 000:0eeeeeeee000eccc00eecccc0e00cc5ce000cccc00000ccc000000cc0000000c
-- 001:eeeeee00cce000e0ccce000ec5c0e000ccc00e00cc000000cc000000c0000000
-- 002:000eeeee0eeeeeeee000eccc00eecccc0e00cc5ce000cccc00000ccc000000cc
-- 003:eeeee000eeeeee00cce000e0ccce00e0c5ce0e00ccce0000cc0e0000cc000000
-- 004:000eeeee0eeeeeeee000eccc00eecccc0e00cc5ce000cccc00000ccc000000cc
-- 005:eeeee000eeeeee00cce00e00ccce0e00c5ce0e00cccee000cc0e0000cce00000
-- 006:000eeeee0eeeeeeee000eccc00eecccc0e00cc5ce000cccc00000ccc000000cc
-- 007:eeeee000eeeee000cceee000cccee000c5cee000ccce0000ccee0000cce00000
-- 008:00000666006666660000e5e500eeeeee0ee55ee50055eeee000ee65500555665
-- 009:6600000066650000555550005ee5ee005ee5ee00ee5ee00056660000eee66000
-- 010:e00000000eeeeeeee000eccc00eecccc0e00cc5ce000cccc00000ccc000000cc
-- 011:0000e0e0eeee0e0ecce0e0e0ccce0e00c5c0e000ccce0000cc0e0000cce00000
-- 012:e00000000eeeeeeee000eccc00eecccc0e00cc5ce000cccc00000cc600000c6c
-- 013:00000000eeeeee00cce0e0e0ccce0e0ec5c0e0e0ccce00006cc00000c6c00000
-- 016:0000000c0000000c000000060000006600000666000066660000000c0000000c
-- 017:c0000000c0000000660000006666c0006660000066600000c0000000c0000000
-- 018:0000000c0000000c000000060000006600000666000066660000000c000000cc
-- 019:c0000000c0000000660000006666c0006660000066600000c0000000c0000000
-- 020:0000000c0000000c000000060000c66600000666000066660000000c000000cc
-- 021:c0000000c0000000660000006666c0006660000066600000c0000000c0000000
-- 022:0000000c0000000c000000060000c66600000666000066660000000c000000cc
-- 023:c0000000c0000000660000006666c0006660000066600000c0000000c0000000
-- 024:0055555500555555000555560000666600006665000006550000000000000000
-- 025:eee56000ee666000666600005556000055500000566505006555550005555000
-- 026:0000000c000000060000c66600000666000066660000000c000000c000000c0c
-- 027:c0000000660000006666c0006660000066600000c0000000c000000000000000
-- 028:00000ccc000000060000c66600000666000066660000000c000000c000000c00
-- 029:ccc00000660000006666c0006660000066600000c00000000c00000000c00000
-- 032:0000eeee000eeeee00e0eecc0e00eccce00ecc5c00e0cccc0e000c6c00000cc6
-- 033:eeeee000eeeee000ccceeee0cccce00ecc5cce00ccccc0e0cc6c000e66cc0000
-- 034:0000eeee000eeeee000eeccc00eeeccce00eeccc00e0ecc40e0eeccc00eeeccc
-- 035:eeeee000eeeee000ccc00000ccc000004cc000005cc00000ccc00000cccc0000
-- 036:0000e000000eeeee00e0eeee0e0eeeece00eeece00eeecc40e00eec5e0eecccc
-- 037:0000e000eeee0e00eee00000eceee000ccceee00ccc000005cc00000cccc0000
-- 038:00e0e0e00e0e0eeee00ee0ec0000eeec000e0eec00e00ec40000eccc000eecec
-- 039:e0e00000eee00000cc0e0000cc00e0004c0000005c000000cc000000ccc00000
-- 040:00066666000ee6660000e66600666666066ee5ee000e55ee0eeeeee5eeee5eee
-- 041:0000000066665500666655505ee55ee05ee5eeee5ee5eeeeeee6e5eeee665e5e
-- 042:00e0e0ee0e0e0ee0e0e0e0ee0e0e0e0ee0e0e0e00e0e0eeee0e0cccc0e0ecccc
-- 043:0e0eccc0e0eec1cc0eecc11cee0ccccce0e11e11eeeeee114ccc11115ccccc11
-- 048:000000cc000000cc00000ccc0000cccc00006666000666660066666606666666
-- 049:ccc00000ccc00000cccc0000cccc000066660000666660006666660066666660
-- 050:0eeeecc6000eeccc000eeccc00000ccc00000ccc000066660006666600066666
-- 051:ccc000006cc00000c6600000cc600000c0000000600000006600000066600000
-- 052:00e0ccc600e0eccc0e0ecccce0eeccccee0e6666ee6e6116ee6e11160e6e1161
-- 053:ccc000006cc00000c66c0000ccc00000cc000000666000006660000066660000
-- 054:00e0cecc0000eccc0000cccc000ecccc00006666000666660061166606116166
-- 055:cc00000066000000cc000000cc000000666000c066660ccc66666ccc66666ccc
-- 056:eee5555e05555eee00eeeee5055666550555666e0555655e5555555e5555555e
-- 057:e55665eee555600055556600eee55600eeee5600eeee5600eeee0000e5e66600
-- 058:00e0cccc000ecccc000ccccc000eeccc000eeccc000066660661616666161661
-- 059:ccccccc1cc6cccc1666cc110c6666c10ccccc110116111006161100061161000
-- 060:0000000000000000000000060000066600006666000066660000555e0005ee5e
-- 061:000000000000000066660000666e000066ee000066666660e5eee000e55eeee0
-- 064:06666666666666666666666666666666cccc6666cccc66660ccc66660cc66666
-- 065:666666606666666666666666666666666666cccc6666cccc6666ccc066666cc0
-- 066:0066666600666ccc006666cc000666cc0006666c000666660006666600066666
-- 067:66666000ccccccccccccc600ccccc600ccccc6006ccc66006666600066666000
-- 068:0066161100666116006611610066161100666116006661610066666600066666
-- 069:666600001cc60000cccc0000cccc6000cccc6600ccc6660066666600ccc66000
-- 070:06161666066161666616166666666666ccccc666ccccc666cccc66660ccc6666
-- 071:666666c6666666606666660066666000666660006666600c666660cc666ccccc
-- 072:555555555555555655555566055566660666665506666655006665550000655e
-- 073:ee66660066666600666660006555000055500000555555005eeee500eeeee500
-- 074:6161661666cc61666cccc666ccccc666ccccc666c0cc66660cc6666600066666
-- 075:66166000661160006661600066666000666660006666600c666660cc6666cccc
-- 076:0005eee50055eeee00665eee005565ee05556555055565555555655555556e55
-- 077:eee5eeeee5555550ee555550eeeeeee0eee55650555556505555665555566555
-- 080:0066666606666660066666000666660000cccc0000cccc00cccccc00cccccc00
-- 081:6666660006666660006666600066666000cccc0000ccccc000cccccc00cccccc
-- 082:cccc6666cccc6666cccc6666cccc6660cccc0000cc000000c000000000000000
-- 083:666666006666660066666000066660000cccc0000cccc0000cccccc00cccccc0
-- 084:0000666c000066cc0000066c00000c6600000ccc0000cccc0000cccc000000cc
-- 085:ccccc000cccc0000ccc000006ccc0000c0cc0000c0000000ccc00000ccc00000
-- 086:0006666600c66666ccc66666cccc6666ccccc6000ccc00000ccc000000ccc000
-- 087:666ccccc666ccccc666ccccc000ccccc00000000000000000000000000000000
-- 088:000005ee00000066000000060000000600000000000000000000000000000000
-- 089:6666000066666005666500556555555555555550555555000555500005550000
-- 090:00016666ccc61166ccc66611ccc66666ccc66666ccc66660cc000000c0000000
-- 091:6666cccc6666cccc6666cccc0066cccc00000000000000000000000000000000
-- 092:5555666655555666555eee6665eeee666eeee66606ee50000055550055555500
-- 093:666655556665555566eee55566eeee50666eeee60005ee600055550000555550
-- 240:000ee10000eeee100ee91ee10ee91ee10ee91ee10ee91ee100eeee10000ee100
-- </SPRITES>

-- <MAP>
-- 000:00000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000062728292000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 001:000000000052000000000062728292000000000000000000000000a00000000000000000000080000000000000000000000000000000000062728272820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006373839300000000000000000000000000000000000000000000a00000000000000000000000000000000000200000002000000000000000000000000000000000000000000000000000000000006272827282728200000000000000000000000000000000000000000000000000627282728292000000
-- 002:0000000000530000000000637383930000000000000000000000a00000000000000000000000000000000000000000000000000000a00000637383738393000000000000000000000000000000000000000000000000006272829200000000000000000000000000000000a0000000000000000000000000006474849400000000000000000000000000000000000000000000000000000062728292000000000000000000000000000000000000000000000000000000000000000000000000000000000000006373837383738393000000000000000000000000000000000000000000000000637383738393000000
-- 003:000000000054000000000064748494000000000000000000000000000000000000000000000000000000000000000000000000000000000064748474849400000000000000a000000000000000000000000000a00000006373839300000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000063738393000000000000004858485848584858485848584858485800000048584858485880000000000000000000006474847484748494000000000000000000000000000000000000000000900000647484748494000000
-- 004:000000000000000000000000000100000000000000000000a000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000006474849400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000647484940000a0000000004959495949594959495949594959495900000049594959495900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 005:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 006:00000100000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 007:0100010000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006878889800000000000000000000000000000000000000006878889800000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 008:000000010100000000000000000000000000000000000000000080000000000000004858900048588000485800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000697989990000000000000000000000000000000000000000697989990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 009:0000000000000000000000000000000000000000000000000000000000000000000049590000495900004959000000000000000000000000000000000000000000000000687888980000000000000000000000000000000000006a7a8a9a00000000000000000000000000000000000000006a7a8a9a0000000000000000000000000000000000000000000000000000000000000000000000000000004848900048580000000000000000000000000000000000000000000000000048580000000000000000000000000000000000000000485848580000000000000000000080000000800000008000000000000000
-- 010:0000000000010000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000697989990000000000000000000000000000000000006a7a8a9a00000000c1d100000000000000000000000000006a7a8a9a000000000000000000000000000000000000000000000000000000000000000000000000000000494900004959000000000000a000000000000000000000000000000000000049590000000000000000000000c1d100000000000000495949590000000000000000000000000000000000000000000000000000
-- 011:00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000068788898000000000000000000000000006a7a8a9a0000000000000000000000000000000000006a7a8a9a0000a2b2c2d2e2f20000000000000000000000006a7a8a9a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2c2d2e2000000000000000000000000000000000000000000000000000000000000000000001111
-- 012:000000c1d10000000000000000000000000000000000000000000000c1d100000000000000000000000000000000000000000069798999000000000000000000000000006a7a8a9a0000000000000000000000000000000000006a7a8a9a0000b2c2c2c2c2e20000000000000000000000006a7a8a9a00000000000000000000000000000000c1d1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2c2c2c2c2e22000000000000000000000000000000000000000000000000000000000000000001110
-- 013:00a2b2c2d2e2f2000100000000000000001222322232223200a0a2b2c2d2e2f2000000000000000020122232420000200000006a7a8a9a000000000000000000000000006a7a8a9a0020000012223222320000000000000000006a7a8a9aa2b2c2d2c2c2c2d2e220000020000000000000006a7a8a9a000000000012223222322232000000b2c2d2e200000000000000000000000000122232420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2c2d2c2c2d2c2e200002000000000000000000000000000000000000000000020000000000000001111
-- 014:00b2c2c2c2c2e200000000000000000000132333233323334300b2c2c2c2c2e2000000000000000000132333430000000000006a7a8a9a000000000000000000000000006a7a8a9a0000000013233323334300000000000000006a7a8a9ab2c2c2c2c2c2c2c2c2e2000000000000000000006a7a8a9a0000000000132333233323334300b2c2c2c2c2e20000000000000000000000001323334300000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2c2c2c2c2c2c2c2c2e2000000000000000000000000000000000000000000000000000000000000001111
-- 015:081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818
-- 016:091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919
-- 017:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062728292000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 018:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062728272820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062728272827282000000000000000000000000000000000000000063738393000000000000000414240000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 019:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063738373839300000000000000000000000000000000000000006272829200000000000000000000000000000000000000000000000063738373837383930000000000000000000000000000000000000064748494000000000000000515250000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 020:0000000000000062728292000000000000000000000000485848584858000000000000000000000000000000000000000000000000000064748474849400000000000000000000000000000000000000006373839300000000000000000000000000000000000000000000000064748474847484940000000000000000000000000000000000000000000000000000000000000616260000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 021:0000000000000063738393000000000000000000000000495949594959000000000000000000000000485880008000485800000000000000000000000000000000000000000000000000000000000000006474849400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017270000000000000000004800484800480000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 022:0000000000000064748494000000000000000000000000000000000000000000000000000000000000495900000000495900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a8b8a8b80000000000000000000000000000000017270000000000000000004848584858480000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 023:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a9b9a9b90000000000000000000000000000000017270000000000000000005949594959590000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 024:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a8b800000000a8b80000000000000000000000000000000000000000a8b8a8b800000000a8b80000000000000000000000000000000000000000000000000000a8b8a8b8a8b80000000000000000000000000000000017270000000000000000485810584810485800000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 025:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a9b900000000a9b90000000000000000000000000000000000000000a9b9a9b900000000a9b90000000000000000000000000000000000000000000000000000a9b9a9b9a9b90000000000000000000000000000000017270000000000000048495911594911495959000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 026:000000000000000000000000000000000000004858000000000000000000000000000000000000000000004858485800000000000000000000000000a8b8a8b800000000a8b8a8b800000000000000000000000000000000a8b8a8b8a8b800000000a8b8a8b800000000000000000000000000000000000000000000a8b8a8b8a8b8a8b80000000000000000000000000000000017270000000000004858485848584858485848580000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 027:000000000000000000000000000000000000004959000000000000000000000000000000000000000000004959495900000000000000000000000000a9b9a9b900000000a9b9a9b90000000000000000c1d1000000000000a9b9a9b9a9b900000000a9b9a9b900000000000000000000000000000000000000000000a9b9a9b9a9b9a9b90000000000000000c1d100000000000017270000000000004959495949594959495949590000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 028:11110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a8b8a8b8a8b800000000a8b8a8b8a8b80000000000b2c2d2e2000000a8b8a8b8a8b8a8b800000000a8b8a8b8a8b800000000000000c1d1000000687888980000a8b8a8b8a8b8a8b8a8b800000000000000b2c2d2e2000000000017270000000000004858485848101058485848580000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 029:11110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a9b9a9b9a9b900000000a9b9a9b9a9b900000000b2c2c2c2c2e20000a9b9a9b9a9b9a9b900000000a9b9a9b9a9b9000000000000b2c2d2e20000697989990000a9b9a9b9a9b9a9b9a9b9000000000000b2c2c2c2c2e20000000017270000000000004959495949111159495949590000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 030:1111000000000000000000200000000000000000000000122232420000000020000000200000000000002000000020000000000000000000a8b8a8b8a8b8a8b822322232a8b8a8b8a8b8a8b800b2c2d2c2c2d2c2a8b8a8b8a8b8a8b8a8b800000000a8b8a8b8a8b8a8b8000000b2c2c2c2c2e2006a7a8a9aa8b8a8b8a8b8a8b8a8b8a8b80000000000b2c2d2c2c2d2c2e2000000a8b80000000000004858485848101058485848580000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 031:1111000000000000000000000000000000000000000000132333430000000000000000000000000000000000000000000000000000000000a9b9a9b9a9b9a9b923332333a9b9a9b9a9b9a9b9b2c2c2c2c2c2c2c2a9b9a9b9a9b9a9b9a9b900000000a9b9a9b9a9b9a9b94300b2c2c2c2c2c2c2e26a7a8a9aa9b9a9b9a9b9a9b9a9b9a9b900000000b2c2c2c2c2c2c2c2c2e20000a9b90000000000004959495949111159495949594300ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 032:081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180000000008180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818081808180818
-- 033:091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190000000009190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919091909190919
-- </MAP>

-- <WAVES>
-- 000:00000000ffffffff00000000ffffffff
-- 001:46777764221000001220056033227889
-- 002:0123456789abcdef0123456789abcdef
-- 003:00000000ffffffffffffffff00000000
-- 004:01123456789abcdefedcba9876543210
-- 008:358acdeefffffea75432222234579bef
-- 009:00000000000400000000000000000000
-- </WAVES>

-- <SFX>
-- 000:0170019001c001d001e001f021f031f041f051f051f051f051f061f061f061f071f071f071f071f071f071f081f081f091f091f0a1f0b1f0d1f0f1f0304000000000
-- 001:019011a011b011b011c011d011e011e011e011e011e011e011f011f021f021f031f041f051f071f081f091f0a1f0b1f0c1f0d1f0e1f0f1f0f1f0f1f0310000000000
-- 002:084008500860087008800880088008800870187028803880489058a068c068d078e088f098f0a8f0b8f0d8f0e8f0e8f0f8f0f8f0f8f0f8f0f8f0f8f0515000000000
-- 003:0104010d110d11001102110321022101310e410d610e810fa100e100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100f100509000000000
-- 004:730573047305730573057306730573057305730573047304730473047304730473047305730573057305730573057304730473047304730473047304000000000000
-- 005:040404050405040504050405040404040404040404040404040404040405040504050405040504050405040504050404040404040404040404040404000000000000
-- 006:850485058505850585058504850485048504850485048504850485058505850585058505850485058504850585058505850585058504850485048504000000000000
-- 007:04000400040024006400b400e400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400f400000000000000
-- 008:03000300030023006300b300e300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300f300000000000000
-- </SFX>

-- <PATTERNS>
-- 000:a22144100000a22144100000100000100000a22144100000100000100000a22144100000a22144100000000000000000f22144100000000000000000000000000000000000000000b22144100000000000000000000000000000000000000000822154100000000000000000000000e22154000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 001:822146100000822146100000822146100000822146100000100000100000422146100000822146100000000000000000b22146100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000422156100000000000000000000000622154000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 002:622154100000622154100000100000100000622154100000100000100000622154100000622154100000000000000000b22156100000000000000000000000000000000000000000b22154100000000000000000000000000000000000000000b22154100000000000000000000000e22152100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 003:722164100000000000000000722164100000722164100000000000000000722164100000722164100000000000000000722164100000000000000000000000000000000000000000000000000000722164100000722164100000722164100000522164100000000000000000000000522160100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </PATTERNS>

-- <TRACKS>
-- 000:180301000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000
-- </TRACKS>

-- <PALETTE>
-- 000:20202c0c000430346d4e4a4e854c30346524d04648757161597dced27d2c8595a16daa2cd2aa996dc2cadad45edeeed6
-- </PALETTE>

-- <COVER>
-- 000:54b000007494648393160f00880077000012ffb0e45445353414055423e2033010000000129f40402000ff00c2000000000f0088007895d7ecad4de5c000402dd7c2edee6dd62cac0d64842daa99d6aacff001080c00104080c388031a2c58c0b1a3c780132a4c9841b2a5cb88133a242840d0a6cf80234a8c1942b469428304047c6840a5e1c6940c4acc9943b6ad4c8825561418e2b76c4f900c5edc1a44b8a1df893752f41a033860de9743aa4d9a3539eec5a13f92f4dae49aa7dfa069427cbaa599a0d7a953caad5bc632a2d6b073eacd9b91708ddbb871fa74abc7f3a08fbb7b120eeb7070c8d3c783031e5c21500c420a831a3e3bd7d0be44cd19c23edc2872f3e8c00efe366c68936ed4cc935f24fcf81278648ca923fd2d10ce206bb3614baedc1bf3bb618db94b9e498298fbdddaab77186de138f26ad6bb8f56dd8cbfa7e20bcb566f6960fa7671ec1ff6dffe8e7cbaf2ebeda993af6afc11bd61f5edcfc50c9ebebdf1ddef039f0f2fdafdfff7f18798d561f5f7c65f60062820e07881576028590648dad282d1a6f06b52a948a1a07406143d9667128580a68ff1588951812e45322986f13608db803eb892ea5b22b831ec88368539d676f1f8006e804e75b3a679e9f80391950409a4aa8ad167bd939c3e27e4e198dd2965a151b1498d110a5e36a5e2775689341d745a79b5619bd989a6ed4dbd88d66a5b66c962568ea1d909577e957727ee923d06709c80bdf5c7e0a4861a68e1a8862aa8e2ac863ae8e3a0964a29e4a4965a69e5a8966aa9e6ac967ae9e7a0a68a2ae8a4a69ad92e56ae2a87910604aa88eaaca6bffaea21a975cacaecac76e5675ca671ea17eeacaaea779faa6e006ba102ce004c6890c2fa0b6fabce29dc60b0b22b1da4bdca0b1ce5ba462b9c27bdd6ca9e1fa0ee59d269b16e9b8ea59aeeab42d100f6cb2fecb7048613edb000dbaf6cb0042b9e900bfeebeea442ca0050b1cedae550f2c72638b0beae0e0c5814c707a490b1c807e591b2c5053cd1f6c7718c6b94c01ddb62ff590be572fdb4bd8777d08b23c842f3412f3c6b5ac53fdc413e53cdd6d276c22b5c3ceccd05eca1b2c83b0da432df27583ed476433dac21dc054d1570d6370d027fce471465bec0d25da05cc1362d9219df2efca258c1e1ade7a8d90dec0136d27f7d73bb77634d7471c07b2ff457bac66b8c85b1c877782872b1139cf778c47fed2537cd0a1eb8f8cd770ae673ea2f5ed271719f5e59324f538c89b1d78f96af9171e58e97d7e31f2d06fdcd836caaf9668f7804ffdcab043bbdd95f2ee17e6bb78df9f5e8729d6f21f8c3ad9bf2fcc73fecf3f0d74f2df4f4d75f6db979cbbd7d3b98047fedf7f0e78f2e77f98f6fe75208e3af1e7afce7bfee7205eb9f91900edbaf0e720ddfbfae3ef8f39f2f3d44fbcf5ffeb7df3dfdefeb71fbff954208800bf110508feb60a40df7a0c935df6085f38064013890ca0e44818e0cc06305f721c10670d38111012603f7a147fd40928824198a07d7d246f590db772c81a346687fba1ad0938a3491e50ff96832cd0eb037814c5dc01b78544322e0398021e1e30b98debb12c01a8819ce92f0b8e71d22eb4257ca1900aec3b4411290d482515c0aa2e27c2b558481880042aa8ac8c24a2e10f98159836be686179004208029ebe268f4e8151926d1fc887c3a8ffeb5d61e8cf1109e7c9fd8f4f4c7134e40d9875c2a87f216c6174a32ff890094e425f8471b4610139484d847fec637b9a9a58d73614f9827a898c8b892d78f2425a22fe2708d810c8f8161cc8644a804c9f0d1f298a49a02087913a30003f598e3308c2f2202c1f5621347cc35651b89741cb4f2d99308f6ea11a9ca26f1540036d41f5370e27b4b3ed1579641f62cbce21fa17285200ca2c7a437a99ff2c47a53bb30f4d1563179cdc87a9dc5906936993bf9efcf7e53584305772ffa69a9497acbce990dc72023102b288434f3a49418a0099889c08215eb720363a6493a92483e74d1a9a4294b3119f0db909f006afa89ec42d71b268eb4f5aa3512e847a852d0aa542e8f2a97dbd0a9de3f9ef4b1a64d8264496a62d1a02539a0f247645942b0d29d351aa43a9aab0b0a549ca6251ba4fcc9683be9b65a791ce2ad655a6c53dae6d9b6c55e5f656beeb2fa3fcbb6cb8fa0ecdbad550b0752cae55da5854ce16bea9856c2b51170e4bd44653639df561ca2b395db06612ba95ec68c23bf9dece5654b01bdce8634b7a59ca7655b9ad4908695b0b5ac29656b8ad2dffec676b695bd6d696b1b5cdeb6d5b7bddd6e697b0cd6de07d7bbad2eae6b7b2cdfde07f8bdcd4e24736b3d55ea5719b6c57ea9679b7dd8e6675abadd0e2573cbbb5ce696186ad54f2465db7956fe97bcbf957f2565eba95af6c71eb295bf6e71fbea5df6f79fb003ff60810c97b7b22ea0c1ec307adc9b80660f2851c7b17074812c8239075892c60e58d3853c316e0f58d3c916a8d68b4b875de69812b72ebc6a894cf75317b815cf26517c895c955717d816c736917e896c2e4d17f897c5dd7e29799b3e50fa19fbb846ee6097bb4cd52b87dabe4600339dcbd4e12777b8c94ea2f1959c65e823191acd5e03f695bc956a2b99dbbc5e13f991bc96e233a99ffccd6e833c9bac28bccafce6b77e2f6e9b7bb7ebe6f9f8bf76b33ac88b973ee61a90d186d8d0a1fcb86d373a9fcf86f3708d796763b2e9d2da76c43f953de76e430ad3d59ee525a92b2aeb479a33d7aed47aab3dbaef47ba34dd8ef4fa539a6b53bef504bfb4b534737d2aeb57dab7dbb676aea17d2c60631b76d08936f0bf7d4b69de2bd9d6c66672b5adeb68673b94b33ead66b16bbd65e67b37bfde8c68b979b36d679b9bd7e6f67ab1cdbe6177bb9cdf36377cb1dd3feee20a38da8e36bac4fdc83e7fb7cfd7630875b91d207c7febd0d3077471c71e80f94f28bc650ea034cbc60ce1435c72e03a0726cf1e91f88fb573e11609b4cb3e7172976cb2e80f0b297adc3ea173937c75ea27f95040000b3
-- </COVER>

